name: envoy-debugging
services:
  envoy_downstream:
    image: "${ENVOY_IMAGE:-envoyproxy/envoy:v1.31.5}"
    command: "--config-path /etc/envoy/envoy.yaml --log-level info"
    ports:
      - "${DOWNSTREAM_PORT:-3128}:3128"
      - "${ADMIN_PORT:-9901}:9901"
    volumes:
      - ./certs/envoy_downstream/:/etc/envoy/certs/
      - ./downstream/envoy.yaml:/etc/envoy/envoy.yaml
      - ./downstream/log:/var/log

  envoy_upstream:
    image: "${ENVOY_IMAGE:-envoyproxy/envoy:v1.31.5}"
    command: --config-path /etc/envoy/envoy.yaml --log-level info
    ports:
      - "${UPSTREAM_ADMIN_PORT:-9902}:9901"
    volumes:
      - ./certs/envoy_upstream/:/etc/envoy/certs/
      - ./upstream/envoy.yaml:/etc/envoy/envoy.yaml
      - ./upstream/log:/var/log

  service-http:
    image: mendhak/http-https-echo:28
    entrypoint: sh
    command: -c 'node ./index.js >/dev/null'
    environment:
      - PORT=8080

  # jmeter:
  #   build:
  #     context: ./jmeter
  #   volumes:
  #     - ./jmeter/test-plan.jmx:/test-plan.jmx
  #     - ./results:/results
  #   entrypoint: sh
  #   command: -c 'rm -rf /results/* && jmeter -n -t /test-plan.jmx -l /results/custom-results.jtl -e -o /results/dashboard'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards/json:/etc/grafana/dashboards
      - grafana-storage:/var/lib/grafana

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus

  curl:
    image: curlimages/curl:7.84.0
    entrypoint: sh
    command: -c 'while true; do curl -sS -m 1 -w "%{response_code}\n" -o /dev/null http://envoy_downstream:3128/; sleep 1; done'
    volumes:
      - ./certs:/etc/envoy/certs

volumes:
  grafana-storage: {}
